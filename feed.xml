<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://firmansyahyunus.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://firmansyahyunus.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-10-29T08:14:05+00:00</updated><id>https://firmansyahyunus.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Blazor WebAssembly &amp;amp; Web API on .NET 6 C# (Part 1)</title><link href="https://firmansyahyunus.github.io/blazor-posts/2023/10/20/post-blazor-webapi.html" rel="alternate" type="text/html" title="Blazor WebAssembly &amp;amp; Web API on .NET 6 C# (Part 1)"/><published>2023-10-20T13:56:00+00:00</published><updated>2023-10-20T13:56:00+00:00</updated><id>https://firmansyahyunus.github.io/blazor-posts/2023/10/20/post-blazor-webapi</id><content type="html" xml:base="https://firmansyahyunus.github.io/blazor-posts/2023/10/20/post-blazor-webapi.html"><![CDATA[<p>Membuat aplikasi Shopping Cart dengan Blazor WebAssembly dan Web API di .NET 6 C#</p> <p>Dalam artikel ini, kami akan membuat panduan melalui proses langkah demi langkah dalam membuat shopping cart interaktif menggunakan Web API di .NET 6 untuk mengelola data produk, keranjang belanja, dan transaksi.</p> <h2 data-toc-text="Buat Project Blazor WebAssembly App" id="buat-project-blazor-webassembly-app">Buat Project Blazor WebAssembly App</h2> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/27.10.2023_22.28.56_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="buat-nama-project-shopcartweb">Buat nama project ShopCart.Web</h3> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/27.10.2023_22.39.59_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="pilih-framework-net-6">Pilih Framework .NET 6</h3> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/27.10.2023_22.41.07_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 data-toc-text="Buat Project ASP.NET Core Web API" id="buat-project-baru-pada-solution-yang-sama">Buat Project baru pada Solution yang sama</h2> <p>klik kanan ke Solution -&gt; Add -&gt; New Project</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/Screenshot%202023-10-27%20225341.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="pilih-project-aspnet-core-web-api">Pilih Project ASP.NET Core Web API</h3> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/27.10.2023_22.55.36_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="buat-nama-project-shopcartapi">Buat nama project ShopCart.Api</h3> <p>Pilih Framework .Net 6, Authentication Type None</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/27.10.2023_23.05.20_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="buat-class-model-entities">Buat class model entities</h2> <p>Buat class berikut pada Shop.Api Project, Folder Entities</p> <p><code class="language-plaintext highlighter-rouge">Cart.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Api.Entities</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">User</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">UserName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">CartItem.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Api.Entities</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">CartItem</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CartId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">ProductId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Qty</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">Product.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Api.Entities</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">Product</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Description</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ImageURL</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">decimal</span> <span class="n">Price</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Qty</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CategoryId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">ProductCategory.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Api.Entities</span>
<span class="p">{</span>
     <span class="k">public</span> <span class="k">class</span> <span class="nc">ProductCategory</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">User.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Api.Entities</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">User</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">UserName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div> <h2 id="erd">ERD</h2> <p>Entity Relationship Diagram</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/27.10.2023_23.26.48_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="tambah-library-nuget">Tambah library nuget</h2> <p>Tambah dependency library melalui Nuget Package pada project ShoptCart.Api, install versi 6 <code class="language-plaintext highlighter-rouge">Microsoft.EntityFrameworkCore.SqlServer</code> <code class="language-plaintext highlighter-rouge">Microsoft.EntityFrameworkCore.Tools</code></p> <h2 id="tambah-connectionstring">Tambah connectionString</h2> <p>Tambahkan ConnectionString untuk koneksi ke Database SQL pada file appsettings.json <code class="language-plaintext highlighter-rouge">appsettings.json</code></p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">{</span>
  <span class="s2">"</span><span class="s">ConnectionStrings"</span><span class="pi">:</span> <span class="pi">{</span>
    <span class="s2">"</span><span class="s">ShopCartConnection"</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Server=MYLOCAL;Database=ShopCart;Trusted_Connection=True"</span>
  <span class="pi">},</span>
  <span class="s2">"</span><span class="s">Logging"</span><span class="pi">:</span> <span class="pi">{</span>
    <span class="s2">"</span><span class="s">LogLevel"</span><span class="pi">:</span> <span class="pi">{</span>
      <span class="s2">"</span><span class="s">Default"</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Information"</span><span class="pi">,</span>
      <span class="s2">"</span><span class="s">Microsoft.AspNetCore"</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Warning"</span>
    <span class="pi">}</span>
  <span class="pi">},</span>
  <span class="s2">"</span><span class="s">AllowedHosts"</span><span class="pi">:</span> <span class="s2">"</span><span class="s">*"</span>
<span class="pi">}</span>
</code></pre></div></div> <h2 id="tambah-datacontext">Tambah datacontext</h2> <p>Buat file datacontext pada project Api dan folder Data <code class="language-plaintext highlighter-rouge">ShopCartDbContext.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">Microsoft.EntityFrameworkCore</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Entities</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">ShopCart.Api.Data</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">ShopCartDbContext</span> <span class="p">:</span> <span class="n">DbContext</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="nf">ShopCartDbContext</span><span class="p">(</span><span class="n">DbContextOptions</span><span class="p">&lt;</span><span class="n">ShopCartDbContext</span><span class="p">&gt;</span> <span class="n">options</span><span class="p">)</span> <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
        <span class="p">{</span>

        <span class="p">}</span>

        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnModelCreating</span><span class="p">(</span><span class="n">ModelBuilder</span> <span class="n">modelBuilder</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnModelCreating</span><span class="p">(</span><span class="n">modelBuilder</span><span class="p">);</span>

            <span class="c1">//Products</span>
            <span class="c1">//Beauty Category</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Glossier - Beauty Kit"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"A kit provided by Glossier, containing skin care, hair care and makeup products"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Beauty/Beauty1.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">1</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Curology - Skin Care Kit"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"A kit provided by Curology, containing skin care products"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Beauty/Beauty2.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">45</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">1</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">3</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Cocooil - Organic Coconut Oil"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"A kit provided by Curology, containing skin care products"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Beauty/Beauty3.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">20</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">30</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">1</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">4</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Schwarzkopf - Hair Care and Skin Care Kit"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"A kit provided by Schwarzkopf, containing skin care and hair care products"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Beauty/Beauty4.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">60</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">1</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">5</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Skin Care Kit"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Skin Care Kit, containing skin care and hair care products"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Beauty/Beauty5.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">30</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">85</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">1</span>

            <span class="p">});</span>
            <span class="c1">//Electronics Category</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">6</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Air Pods"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Air Pods - in-ear wireless headphones"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Electronic/Electronics1.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">120</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">3</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">7</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"On-ear Golden Headphones"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"On-ear Golden Headphones - these headphones are not wireless"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Electronic/Electronics2.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">40</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">200</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">3</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">8</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"On-ear Black Headphones"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"On-ear Black Headphones - these headphones are not wireless"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Electronic/Electronics3.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">40</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">300</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">3</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">9</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Sennheiser Digital Camera with Tripod"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Sennheiser Digital Camera - High quality digital camera provided by Sennheiser - includes tripod"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Electronic/Electronic4.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">600</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">20</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">3</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">10</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Canon Digital Camera"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Canon Digital Camera - High quality digital camera provided by Canon"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Electronic/Electronic5.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">500</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">15</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">3</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">11</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Nintendo Gameboy"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Gameboy - Provided by Nintendo"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Electronic/technology6.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">60</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">3</span>
            <span class="p">});</span>
            <span class="c1">//Furniture Category</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">12</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Black Leather Office Chair"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Very comfortable black leather office chair"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Furniture/Furniture1.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">212</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">2</span>
            <span class="p">});</span>

            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">13</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Pink Leather Office Chair"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Very comfortable pink leather office chair"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Furniture/Furniture2.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">112</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">2</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">14</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Lounge Chair"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Very comfortable lounge chair"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Furniture/Furniture3.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">70</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">90</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">2</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">15</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Silver Lounge Chair"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Very comfortable Silver lounge chair"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Furniture/Furniture4.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">120</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">95</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">2</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">16</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Porcelain Table Lamp"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"White and blue Porcelain Table Lamp"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Furniture/Furniture6.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">15</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">2</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">17</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Office Table Lamp"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Office Table Lamp"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Furniture/Furniture7.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">20</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">73</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">2</span>
            <span class="p">});</span>
            <span class="c1">//Shoes Category</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">18</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Puma Sneakers"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Comfortable Puma Sneakers in most sizes"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Shoes/Shoes1.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">4</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">19</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Colorful Trainers"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Colorful trainsers - available in most sizes"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Shoes/Shoes2.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">150</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">60</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">4</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">20</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Blue Nike Trainers"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Blue Nike Trainers - available in most sizes"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Shoes/Shoes3.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">200</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">70</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">4</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">21</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Colorful Hummel Trainers"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Colorful Hummel Trainers - available in most sizes"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Shoes/Shoes4.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">120</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">120</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">4</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">22</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Red Nike Trainers"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Red Nike Trainers - available in most sizes"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Shoes/Shoes5.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">200</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">4</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Product</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">23</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Birkenstock Sandles"</span><span class="p">,</span>
                <span class="n">Description</span> <span class="p">=</span> <span class="s">"Birkenstock Sandles - available in most sizes"</span><span class="p">,</span>
                <span class="n">ImageURL</span> <span class="p">=</span> <span class="s">"/Images/Shoes/Shoes6.png"</span><span class="p">,</span>
                <span class="n">Price</span> <span class="p">=</span> <span class="m">50</span><span class="p">,</span>
                <span class="n">Qty</span> <span class="p">=</span> <span class="m">150</span><span class="p">,</span>
                <span class="n">CategoryId</span> <span class="p">=</span> <span class="m">4</span>
            <span class="p">});</span>

            <span class="c1">//Add users</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">User</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">User</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">UserName</span> <span class="p">=</span> <span class="s">"Bob"</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">User</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">User</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span>
                <span class="n">UserName</span> <span class="p">=</span> <span class="s">"Sarah"</span>

            <span class="p">});</span>

            <span class="c1">//Create Shopping Cart for Users</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Cart</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Cart</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">UserId</span> <span class="p">=</span> <span class="m">1</span>

            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">Cart</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">Cart</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span>
                <span class="n">UserId</span> <span class="p">=</span> <span class="m">2</span>

            <span class="p">});</span>
            <span class="c1">//Add Product Categories</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">ProductCategory</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Beauty"</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">ProductCategory</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">2</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Furniture"</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">ProductCategory</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">3</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Electronics"</span>
            <span class="p">});</span>
            <span class="n">modelBuilder</span><span class="p">.</span><span class="n">Entity</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;().</span><span class="nf">HasData</span><span class="p">(</span><span class="k">new</span> <span class="n">ProductCategory</span>
            <span class="p">{</span>
                <span class="n">Id</span> <span class="p">=</span> <span class="m">4</span><span class="p">,</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"Shoes"</span>
            <span class="p">});</span>
        <span class="p">}</span>
    
        <span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">Cart</span><span class="p">&gt;</span> <span class="n">Carts</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">CartItem</span><span class="p">&gt;</span> <span class="n">CartItems</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;</span> <span class="n">Products</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;</span> <span class="n">ProductCategories</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="n">DbSet</span><span class="p">&lt;</span><span class="n">User</span><span class="p">&gt;</span> <span class="n">Users</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div> <h2 id="tambah-service-sql-server">Tambah service SQL Server</h2> <p>Tambahan code pada Program.cs service koneksi ke SQLServer <code class="language-plaintext highlighter-rouge">Program.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">Microsoft.EntityFrameworkCore</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Data</span><span class="p">;</span>

<span class="kt">var</span> <span class="n">builder</span> <span class="p">=</span> <span class="n">WebApplication</span><span class="p">.</span><span class="nf">CreateBuilder</span><span class="p">(</span><span class="n">args</span><span class="p">);</span>

<span class="c1">// Add services to the container.</span>

<span class="n">builder</span><span class="p">.</span><span class="n">Services</span><span class="p">.</span><span class="nf">AddControllers</span><span class="p">();</span>
<span class="c1">// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle</span>
<span class="n">builder</span><span class="p">.</span><span class="n">Services</span><span class="p">.</span><span class="nf">AddEndpointsApiExplorer</span><span class="p">();</span>
<span class="n">builder</span><span class="p">.</span><span class="n">Services</span><span class="p">.</span><span class="nf">AddSwaggerGen</span><span class="p">();</span>

<span class="n">builder</span><span class="p">.</span><span class="n">Services</span><span class="p">.</span><span class="n">AddDbContext</span><span class="p">&lt;</span><span class="n">ShopCartDbContext</span><span class="p">&gt;(</span><span class="n">options</span> <span class="p">=&gt;</span>
    <span class="n">options</span><span class="p">.</span><span class="nf">UseSqlServer</span><span class="p">(</span><span class="n">builder</span><span class="p">.</span><span class="n">Configuration</span><span class="p">.</span><span class="nf">GetConnectionString</span><span class="p">(</span><span class="s">"ShopCartConnection"</span><span class="p">))</span>
    <span class="p">);</span>

<span class="kt">var</span> <span class="n">app</span> <span class="p">=</span> <span class="n">builder</span><span class="p">.</span><span class="nf">Build</span><span class="p">();</span>

<span class="c1">// Configure the HTTP request pipeline.</span>
<span class="k">if</span> <span class="p">(</span><span class="n">app</span><span class="p">.</span><span class="n">Environment</span><span class="p">.</span><span class="nf">IsDevelopment</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">app</span><span class="p">.</span><span class="nf">UseSwagger</span><span class="p">();</span>
    <span class="n">app</span><span class="p">.</span><span class="nf">UseSwaggerUI</span><span class="p">();</span>
<span class="p">}</span>

<span class="n">app</span><span class="p">.</span><span class="nf">UseHttpsRedirection</span><span class="p">();</span>

<span class="n">app</span><span class="p">.</span><span class="nf">UseAuthorization</span><span class="p">();</span>

<span class="n">app</span><span class="p">.</span><span class="nf">MapControllers</span><span class="p">();</span>

<span class="n">app</span><span class="p">.</span><span class="nf">Run</span><span class="p">();</span>

</code></pre></div></div> <h2 id="menggunakan-migration-ef-core">Menggunakan migration EF Core</h2> <p>Untuk generate Migration EF Core, menggunakan Package Manager Console, di Menu Tools - Nuget Package Manager Ketik code berikut untuk menjalankan migrasi EF Core ke database dan pilihdefault Project ke ShopCart.Api</p> <p><code class="language-plaintext highlighter-rouge">Add-Migration InitialCreate</code> <code class="language-plaintext highlighter-rouge">Update-Database</code></p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_00.12.15_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="hasil-migrasi-pada-database-sql-shopcart">Hasil migrasi pada database SQL ShopCart</h2> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_11.39.51_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Progres sampai saat ini <br/> Table Users</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_23.51.31_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Table Products</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_23.55.49_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Table ProductCategories</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_23.52.25_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Table Cart</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_23.52.58_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="struktur-project-solution-">Struktur Project Solution <br/></h2> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/29.10.2023_00.01.00_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div>]]></content><author><name></name></author><category term="blazor-posts"/><summary type="html"><![CDATA[Learn Blazor WebAssembly and Web API on .NET 6 by building a shopping cart application using C#]]></summary></entry><entry><title type="html">Blazor WebAssembly &amp;amp; Web API on .NET 6 C# (Part 2)</title><link href="https://firmansyahyunus.github.io/blazor-posts/2023/10/20/post-blazor-webapi-2.html" rel="alternate" type="text/html" title="Blazor WebAssembly &amp;amp; Web API on .NET 6 C# (Part 2)"/><published>2023-10-20T13:56:00+00:00</published><updated>2023-10-20T13:56:00+00:00</updated><id>https://firmansyahyunus.github.io/blazor-posts/2023/10/20/post-blazor-webapi-2</id><content type="html" xml:base="https://firmansyahyunus.github.io/blazor-posts/2023/10/20/post-blazor-webapi-2.html"><![CDATA[<p>Membuat aplikasi Shopping Cart dengan Blazor WebAssembly dan Web API di .NET 6 C#</p> <p>Dalam artikel ini, kami akan membuat panduan melalui proses langkah demi langkah dalam membuat shopping cart interaktif menggunakan Web API di .NET 6 untuk mengelola data produk, keranjang belanja, dan transaksi.</p> <h2 data-toc-text="Buat Project Model Class Library" id="buat-project-baru-untuk-model-class-library">Buat Project baru untuk Model Class Library</h2> <p>Pilih ClassLibrary beri nama project ShopCart.Models pilih Framework .NET 6</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_11.51.07_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="buat-model-dtos">Buat model Dtos</h3> <p>Buat file berikut pada Shop.Models project, folder Dtos</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/28.10.2023_12.04.03_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p><code class="language-plaintext highlighter-rouge">CartItemDto.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Models.Dtos</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">CartItemDto</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">ProductId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CartId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ProductName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ProductDescription</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ProductImageURL</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">decimal</span> <span class="n">Price</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">decimal</span> <span class="n">TotalPrice</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Qty</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">CartItemQtyUpdateDto.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Models.Dtos</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">CartItemQtyUpdateDto</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CartItemId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Qty</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">CartItemToAddDto.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Models.Dtos</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">CartItemToAddDto</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CartId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">ProductId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Qty</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">ProductDto.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">namespace</span> <span class="nn">ShopCart.Models.Dtos</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">ProductDto</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Id</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Description</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">ImageURL</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">decimal</span> <span class="n">Price</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">Qty</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">int</span> <span class="n">CategoryId</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">CategoryName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <h2 data-toc-text="Buat folder Repository" id="buat-folder-repository">Buat folder Repository</h2> <p>Membuat folder Repository untuk menggunakan repository pattern, buat file di dalam folder tersebut, file interface IProductRepository dan file ProductRepository untuk meng-implementasikan interface .</p> <p><code class="language-plaintext highlighter-rouge">IProductRepository.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">ShopCart.Api.Entities</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">ShopCart.Api.Repositories.Contracts</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">interface</span> <span class="nc">IProductRepository</span>
    <span class="p">{</span>
        <span class="n">Task</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;&gt;</span> <span class="nf">GetItems</span><span class="p">();</span>
        <span class="n">Task</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;&gt;</span> <span class="nf">GetCategories</span><span class="p">();</span>
        <span class="n">Task</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;</span> <span class="nf">GetItem</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">);</span>
        <span class="n">Task</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;</span> <span class="nf">GetCategory</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">);</span>    
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p><code class="language-plaintext highlighter-rouge">ProductRepository.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">Microsoft.EntityFrameworkCore</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Data</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Entities</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Repositories.Contracts</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">ShopCart.Api.Repositories</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">ProductRepository</span> <span class="p">:</span> <span class="n">IProductRepository</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="k">readonly</span> <span class="n">ShopCartDbContext</span> <span class="n">context</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">ProductRepository</span><span class="p">(</span><span class="n">ShopCartDbContext</span> <span class="n">context</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">context</span> <span class="p">=</span> <span class="n">context</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;&gt;</span> <span class="nf">GetCategories</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">categories</span> <span class="p">=</span> <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="n">context</span><span class="p">.</span><span class="n">ProductCategories</span><span class="p">.</span><span class="nf">ToListAsync</span><span class="p">();</span>
            <span class="k">return</span> <span class="n">categories</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;</span> <span class="nf">GetCategory</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;</span> <span class="nf">GetItem</span><span class="p">(</span><span class="kt">int</span> <span class="n">id</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;&gt;</span> <span class="nf">GetItems</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">products</span> <span class="p">=</span> <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="n">context</span><span class="p">.</span><span class="n">Products</span><span class="p">.</span><span class="nf">ToListAsync</span><span class="p">();</span>

            <span class="k">return</span> <span class="n">products</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="tambahkan-kode-independency-injection">Tambahkan kode independency injection</h3> <p>Tambahkan kode berikut pada file Program.cs agar repository bisa digunakan. <code class="language-plaintext highlighter-rouge">builder.Services.AddScoped&lt;IProductRepository, ProductRepository&gt;();</code></p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/29.10.2023_00.41.17_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="buat-dtoconversions">Buat DtoConversions</h2> <p>Buat Folder Extensions, dan didalamnya buat file DtoConversions.cs, file ini digunakan untuk konversi hasil data dari database ke Swagger UI.</p> <p><code class="language-plaintext highlighter-rouge">DtoConversions.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">ShopCart.Api.Entities</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Models.Dtos</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">ShopCart.Api.Extensions</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">DtoConversions</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">ProductDto</span><span class="p">&gt;</span> <span class="nf">ConvertToDto</span><span class="p">(</span><span class="k">this</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">Product</span><span class="p">&gt;</span> <span class="n">products</span><span class="p">,</span>
                                                                <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">ProductCategory</span><span class="p">&gt;</span> <span class="n">productCategories</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="p">(</span><span class="k">from</span> <span class="n">product</span> <span class="k">in</span> <span class="n">products</span>
                    <span class="k">join</span> <span class="n">productCategory</span> <span class="k">in</span> <span class="n">productCategories</span>
                    <span class="k">on</span> <span class="n">product</span><span class="p">.</span><span class="n">CategoryId</span> <span class="k">equals</span> <span class="n">productCategory</span><span class="p">.</span><span class="n">Id</span>
                    <span class="k">select</span> <span class="k">new</span> <span class="n">ProductDto</span>
                    <span class="p">{</span>
                        <span class="n">Id</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">Id</span><span class="p">,</span>
                        <span class="n">Name</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">Name</span><span class="p">,</span>
                        <span class="n">Description</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">Description</span><span class="p">,</span>
                        <span class="n">ImageURL</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">ImageURL</span><span class="p">,</span>
                        <span class="n">Price</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">Price</span><span class="p">,</span>
                        <span class="n">Qty</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">Qty</span><span class="p">,</span>
                        <span class="n">CategoryId</span> <span class="p">=</span> <span class="n">product</span><span class="p">.</span><span class="n">CategoryId</span><span class="p">,</span>
                        <span class="n">CategoryName</span> <span class="p">=</span> <span class="n">productCategory</span><span class="p">.</span><span class="n">Name</span>

                    <span class="p">}).</span><span class="nf">ToList</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <h2 id="buat-productcontroller">Buat ProductController</h2> <p>Buat file ProductController untuk memanggil repository yang sudah dibuat. <code class="language-plaintext highlighter-rouge">ProductController.cs</code></p> <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">Microsoft.AspNetCore.Http</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">Microsoft.AspNetCore.Mvc</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Extensions</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Api.Repositories.Contracts</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">ShopCart.Models.Dtos</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">ShopCart.Api.Controllers</span>
<span class="p">{</span>
    <span class="p">[</span><span class="nf">Route</span><span class="p">(</span><span class="s">"api/[controller]"</span><span class="p">)]</span>
    <span class="p">[</span><span class="n">ApiController</span><span class="p">]</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">ProductController</span> <span class="p">:</span> <span class="n">ControllerBase</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="k">readonly</span> <span class="n">IProductRepository</span> <span class="n">productRepository</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">ProductController</span><span class="p">(</span><span class="n">IProductRepository</span> <span class="n">productRepository</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">productRepository</span> <span class="p">=</span> <span class="n">productRepository</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="n">HttpGet</span><span class="p">]</span>
        <span class="k">public</span> <span class="k">async</span> <span class="n">Task</span><span class="p">&lt;</span><span class="n">ActionResult</span><span class="p">&lt;</span><span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">ProductDto</span><span class="p">&gt;&gt;&gt;</span> <span class="nf">GetItems</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">try</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">products</span> <span class="p">=</span> <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="n">productRepository</span><span class="p">.</span><span class="nf">GetItems</span><span class="p">();</span>
                <span class="kt">var</span> <span class="n">productcategories</span> <span class="p">=</span> <span class="k">await</span> <span class="k">this</span><span class="p">.</span><span class="n">productRepository</span><span class="p">.</span><span class="nf">GetCategories</span><span class="p">();</span>

                <span class="k">if</span> <span class="p">(</span><span class="n">products</span> <span class="p">==</span> <span class="k">null</span> <span class="p">||</span> <span class="n">productcategories</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">return</span> <span class="nf">NotFound</span><span class="p">();</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="kt">var</span> <span class="n">productDtos</span> <span class="p">=</span> <span class="n">products</span><span class="p">.</span><span class="nf">ConvertToDto</span><span class="p">(</span><span class="n">productcategories</span><span class="p">);</span>

                    <span class="k">return</span> <span class="nf">Ok</span><span class="p">(</span><span class="n">productDtos</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">return</span> <span class="nf">StatusCode</span><span class="p">(</span><span class="n">StatusCodes</span><span class="p">.</span><span class="n">Status500InternalServerError</span><span class="p">,</span>
                                <span class="s">"Error retrieving data from database"</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div> <h2 data-toc-text="Run Project" id="run-project">Run Project</h2> <p>Jalankan project solution pilih Menu Debug -&gt; Start Debugging atau dengan shortcut F5 pada keyboard, maka akan tampil halaman Swagger, Product dan Method Get /api/Product, karena sebelumnya sudah dibuat pada Step 6, file ProductController.cs</p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/29.10.2023_01.14.51_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="execute-get-apiproduct">Execute Get /api/Product</h3> <p>Coba jalankan method Get /api/Product dengan cara, Pilih Try it out -&gt; Pilih Execute, maka data product akan tampil <br/></p> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/29.10.2023_01.24.41_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h2 id="struktur-project-solution-">Struktur Project Solution <br/></h2> <div class="row mt-3"> <figure> <picture> <img src="/assets/img/Blazor%20Web%20Api/29.10.2023_01.30.56_REC.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div>]]></content><author><name></name></author><category term="blazor-posts"/><summary type="html"><![CDATA[Learn Blazor WebAssembly and Web API on .NET 6 by building a shopping cart application using C#]]></summary></entry></feed>